diff --git a/menu/menu_displaylist.c b/menu/menu_displaylist.c
index 57eeca4327..d39fd1fd64 100644
--- a/menu/menu_displaylist.c
+++ b/menu/menu_displaylist.c
@@ -12021,29 +12021,29 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
             }
 #endif
 #endif
-            if (settings->bools.menu_show_legacy_thumbnail_updater)
-            {
-               if (menu_entries_append_enum(info->list,
-                        msg_hash_to_str(MENU_ENUM_LABEL_VALUE_THUMBNAILS_UPDATER_LIST),
-                        msg_hash_to_str(MENU_ENUM_LABEL_THUMBNAILS_UPDATER_LIST),
-                        MENU_ENUM_LABEL_THUMBNAILS_UPDATER_LIST,
-                        MENU_SETTING_ACTION, 0, 0))
-                  count++;
-            }
-
-            if (menu_entries_append_enum(info->list,
-                     msg_hash_to_str(MENU_ENUM_LABEL_VALUE_PL_THUMBNAILS_UPDATER_LIST),
-                     msg_hash_to_str(MENU_ENUM_LABEL_PL_THUMBNAILS_UPDATER_LIST),
-                     MENU_ENUM_LABEL_PL_THUMBNAILS_UPDATER_LIST,
-                     MENU_SETTING_ACTION, 0, 0))
-               count++;
-
-            if (menu_entries_append_enum(info->list,
-                     msg_hash_to_str(MENU_ENUM_LABEL_VALUE_DOWNLOAD_CORE_CONTENT),
-                     msg_hash_to_str(MENU_ENUM_LABEL_DOWNLOAD_CORE_CONTENT_DIRS),
-                     MENU_ENUM_LABEL_DOWNLOAD_CORE_CONTENT_DIRS,
-                     MENU_SETTING_ACTION, 0, 0))
-               count++;
+            //if (settings->bools.menu_show_legacy_thumbnail_updater)
+            //{
+            //   if (menu_entries_append_enum(info->list,
+            //            msg_hash_to_str(MENU_ENUM_LABEL_VALUE_THUMBNAILS_UPDATER_LIST),
+            //            msg_hash_to_str(MENU_ENUM_LABEL_THUMBNAILS_UPDATER_LIST),
+            //            MENU_ENUM_LABEL_THUMBNAILS_UPDATER_LIST,
+            //            MENU_SETTING_ACTION, 0, 0))
+            //      count++;
+            //}
+
+            //if (menu_entries_append_enum(info->list,
+            //         msg_hash_to_str(MENU_ENUM_LABEL_VALUE_PL_THUMBNAILS_UPDATER_LIST),
+            //         msg_hash_to_str(MENU_ENUM_LABEL_PL_THUMBNAILS_UPDATER_LIST),
+            //         MENU_ENUM_LABEL_PL_THUMBNAILS_UPDATER_LIST,
+            //         MENU_SETTING_ACTION, 0, 0))
+            //   count++;
+
+            //if (menu_entries_append_enum(info->list,
+            //         msg_hash_to_str(MENU_ENUM_LABEL_VALUE_DOWNLOAD_CORE_CONTENT),
+            //         msg_hash_to_str(MENU_ENUM_LABEL_DOWNLOAD_CORE_CONTENT_DIRS),
+            //         MENU_ENUM_LABEL_DOWNLOAD_CORE_CONTENT_DIRS,
+            //         MENU_SETTING_ACTION, 0, 0))
+            //   count++;
 
 #ifdef HAVE_COMPRESSION
             if (settings->bools.menu_show_core_updater)
@@ -12057,20 +12057,20 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
             }
 
 #ifdef HAVE_UPDATE_ASSETS
-            if (menu_entries_append_enum(info->list,
-                     msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_ASSETS),
-                     msg_hash_to_str(MENU_ENUM_LABEL_UPDATE_ASSETS),
-                     MENU_ENUM_LABEL_UPDATE_ASSETS,
-                     MENU_SETTING_ACTION, 0, 0))
-               count++;
+            //if (menu_entries_append_enum(info->list,
+            //         msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_ASSETS),
+            //         msg_hash_to_str(MENU_ENUM_LABEL_UPDATE_ASSETS),
+            //         MENU_ENUM_LABEL_UPDATE_ASSETS,
+            //         MENU_SETTING_ACTION, 0, 0))
+            //   count++;
 #endif
 #if !defined(_3DS)
-            if (menu_entries_append_enum(info->list,
-                     msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_AUTOCONFIG_PROFILES),
-                     msg_hash_to_str(MENU_ENUM_LABEL_UPDATE_AUTOCONFIG_PROFILES),
-                     MENU_ENUM_LABEL_UPDATE_AUTOCONFIG_PROFILES,
-                     MENU_SETTING_ACTION, 0, 0))
-               count++;
+            //if (menu_entries_append_enum(info->list,
+            //         msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_AUTOCONFIG_PROFILES),
+            //         msg_hash_to_str(MENU_ENUM_LABEL_UPDATE_AUTOCONFIG_PROFILES),
+            //         MENU_ENUM_LABEL_UPDATE_AUTOCONFIG_PROFILES,
+            //         MENU_SETTING_ACTION, 0, 0))
+            //   count++;
 
             if (menu_entries_append_enum(info->list,
                      msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_CHEATS),
@@ -12090,12 +12090,12 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
 #endif
 #endif
 #if !defined(_3DS)
-            if (menu_entries_append_enum(info->list,
-                     msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_OVERLAYS),
-                     msg_hash_to_str(MENU_ENUM_LABEL_UPDATE_OVERLAYS),
-                     MENU_ENUM_LABEL_UPDATE_OVERLAYS,
-                     MENU_SETTING_ACTION, 0, 0))
-               count++;
+            //if (menu_entries_append_enum(info->list,
+            //         msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_OVERLAYS),
+            //         msg_hash_to_str(MENU_ENUM_LABEL_UPDATE_OVERLAYS),
+            //         MENU_ENUM_LABEL_UPDATE_OVERLAYS,
+            //         MENU_SETTING_ACTION, 0, 0))
+            //   count++;
 
 #if defined(HAVE_CG) || defined(HAVE_GLSL) || defined(HAVE_SLANG) || defined(HAVE_HLSL)
             if (video_shader_is_supported(RARCH_SHADER_CG))
@@ -12108,15 +12108,15 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
                   count++;
             }
 
-            if (video_shader_is_supported(RARCH_SHADER_GLSL))
-            {
-               if (menu_entries_append_enum(info->list,
-                        msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_GLSL_SHADERS),
-                        msg_hash_to_str(MENU_ENUM_LABEL_UPDATE_GLSL_SHADERS),
-                        MENU_ENUM_LABEL_UPDATE_GLSL_SHADERS,
-                        MENU_SETTING_ACTION, 0, 0))
-                  count++;
-            }
+            //if (video_shader_is_supported(RARCH_SHADER_GLSL))
+            //{
+            //   if (menu_entries_append_enum(info->list,
+            //            msg_hash_to_str(MENU_ENUM_LABEL_VALUE_UPDATE_GLSL_SHADERS),
+            //            msg_hash_to_str(MENU_ENUM_LABEL_UPDATE_GLSL_SHADERS),
+            //            MENU_ENUM_LABEL_UPDATE_GLSL_SHADERS,
+            //            MENU_SETTING_ACTION, 0, 0))
+            //      count++;
+            //}
 
             if (video_shader_is_supported(RARCH_SHADER_SLANG))
             {
@@ -12133,10 +12133,10 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
 #endif
 
 #ifdef HAVE_NETWORKING
-            if (MENU_DISPLAYLIST_PARSE_SETTINGS_ENUM(info->list,
-                     MENU_ENUM_LABEL_NETWORK_ON_DEMAND_THUMBNAILS,
-                     PARSE_ONLY_BOOL, false) != -1)
-               count++;
+            //if (MENU_DISPLAYLIST_PARSE_SETTINGS_ENUM(info->list,
+            //         MENU_ENUM_LABEL_NETWORK_ON_DEMAND_THUMBNAILS,
+            //         PARSE_ONLY_BOOL, false) != -1)
+            //   count++;
 #endif
          }
 
